import json
from http.server import HTTPServer, BaseHTTPRequestHandler
from threading import Thread
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters
from telegram.ext import Application, CommandHandler
# ==================================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# ==================================================
TOKEN = "8352098356:AAHS4ceBu0-ryWKv5HInp300pSMyIK0oWI0"
PORT = 8080
HOST = "0.0.0.0"

# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:
# 1. –î–ª—è localtunnel: https://pixelbid.loca.lt
# 2. –î–ª—è Serveo: https://pixelbid.serveo.net
# 3. –î–ª—è GitHub Pages: https://–≤–∞—à_–ª–æ–≥–∏–Ω.github.io/pixelbid-editor
PUBLIC_URL = "https://MisterIgra.github.io/pixelbid-editor"  # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ô URL

# ==================================================
# –í–°–¢–†–û–ï–ù–ù–û–ï –í–ï–ë-–ü–†–ò–õ–û–ñ–ï–ù–ò–ï
# ==================================================
# HTML_EDITOR –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –∫–æ–¥–µ)
# ...
HTML_EDITOR = """
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>PixelBid Editor</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: Arial, sans-serif; padding: 20px; background: #f5f5f5; }
        h1 { text-align: center; margin-bottom: 20px; color: #333; }
        #canvas { 
            display: grid; 
            grid-template-columns: repeat(16, 20px);
            gap: 1px; 
            margin: 0 auto 20px;
            width: fit-content;
        }
        .pixel { 
            width: 20px; 
            height: 20px; 
            border: 1px solid #ddd;
            cursor: pointer;
            background: white;
        }
        .controls { 
            text-align: center; 
            margin: 20px 0; 
        }
        button { 
            padding: 10px 20px; 
            background: #007bff; 
            color: white; 
            border: none; 
            border-radius: 4px; 
            cursor: pointer;
            font-size: 16px;
        }
        button:hover { background: #0069d9; }
    </style>
</head>
<body>
    <h1>üé® PixelBid Editor</h1>
    
    <div class="controls">
        <button onclick="clearCanvas()">–û—á–∏—Å—Ç–∏—Ç—å</button>
        <button onclick="saveArt()">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞—Ä—Ç</button>
    </div>
    
    <div id="canvas"></div>
    
    <script>
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        function initEditor() {
            const canvas = document.getElementById('canvas');
            
            // –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É 16x16 –ø–∏–∫—Å–µ–ª–µ–π
            for (let i = 0; i < 256; i++) {
                const pixel = document.createElement('div');
                pixel.className = 'pixel';
                pixel.addEventListener('click', () => {
                    pixel.style.backgroundColor = 'black';
                });
                canvas.appendChild(pixel);
            }
        }
        
        // –û—á–∏—Å—Ç–∫–∞ —Ö–æ–ª—Å—Ç–∞
        function clearCanvas() {
            document.querySelectorAll('.pixel').forEach(pixel => {
                pixel.style.backgroundColor = '';
            });
        }
        
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞—Ä—Ç–∞
        function saveArt() {
            const pixels = [];
            document.querySelectorAll('.pixel').forEach(pixel => {
                pixels.push(pixel.style.backgroundColor || '');
            });
            
            Telegram.WebApp.sendData(JSON.stringify(pixels));
            Telegram.WebApp.close();
        }
        
        // –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        window.onload = initEditor;
    </script>
</body>
</html>
"""

# –í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class WebAppHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/html')
        self.end_headers()
        self.wfile.write(HTML_EDITOR.encode('utf-8'))

# ==================================================
# –¢–ï–õ–ï–ì–†–ê–ú –ë–û–¢
# ==================================================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton(
            "üé® –û—Ç–∫—Ä—ã—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä", 
            web_app=WebAppInfo(url=PUBLIC_URL)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π URL
        )]
    ]
    
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}!\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PixelBid - –∞—É–∫—Ü–∏–æ–Ω –ø–∏–∫—Å–µ–ª—å–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞!\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∏—Å–æ–≤–∞—Ç—å:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

# –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
# ...




async def start(update, context):
    await update.message.reply_text("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–ø–∏—à–∏—Ç–µ /start –≤ Telegram")
    app.run_polling()

if __name__ == "__main__":
    main()